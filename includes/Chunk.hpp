#ifndef CHUNK_H
#define CHUNK_H

#include <vox.h>

class Chunk
{
	public:
		float vertex[108] = {
		    /*-0.5f, -0.5f, -0.5f,
		     0.5f, -0.5f, -0.5f,
		     0.5f,  0.5f, -0.5f,
		     0.5f,  0.5f, -0.5f,
		    -0.5f,  0.5f, -0.5f,
		    -0.5f, -0.5f, -0.5f,

			-0.5f, -0.5f,  0.5f,
			   0.5f, -0.5f,  0.5f,
			   0.5f,  0.5f,  0.5f,
			   0.5f,  0.5f,  0.5f,
			  -0.5f,  0.5f,  0.5f,
			  -0.5f, -0.5f,  0.5f,

			  -0.5f,  0.5f,  0.5f,
			  -0.5f,  0.5f, -0.5f,
			  -0.5f, -0.5f, -0.5f,
			  -0.5f, -0.5f, -0.5f,
			  -0.5f, -0.5f,  0.5f,
			  -0.5f,  0.5f,  0.5f,

			   0.5f,  0.5f,  0.5f,
			   0.5f,  0.5f, -0.5f,
			   0.5f, -0.5f, -0.5f,
			   0.5f, -0.5f, -0.5f,
			   0.5f, -0.5f,  0.5f,
			   0.5f,  0.5f,  0.5f,

			  -0.5f, -0.5f, -0.5f,
			   0.5f, -0.5f, -0.5f,
			   0.5f, -0.5f,  0.5f,
			   0.5f, -0.5f,  0.5f,
			  -0.5f, -0.5f,  0.5f,
			  -0.5f, -0.5f, -0.5f,

			  -0.5f,  0.5f, -0.5f,
			   0.5f,  0.5f, -0.5f,
			   0.5f,  0.5f,  0.5f,
			   0.5f,  0.5f,  0.5f,
			  -0.5f,  0.5f,  0.5f,
			  -0.5f,  0.5f, -0.5f
*/

			1.0f , -1.0f, 1.0f,
			-1.0f , -1.0f, -1.0f,
			1.0f , -1.0f, -1.0f,

			-1.0f , 1.0f, -1.0f,
			1.0f , 1.0f, 1.0f,
			1.0f , 1.0f, -1.0f,

			1.0f , 1.0f, -1.0f,
			1.0f , -1.0f, 1.0f,
			1.0f , -1.0f, -1.0f,

			1.0f , 1.0f, 1.0f,
			-1.0f , -1.0f, 1.0f,
			1.0f , -1.0f, 1.0f,

			-1.0f , -1.0f, 1.0f,
			-1.0f , 1.0f, -1.0f,
			-1.0f , -1.0f, -1.0f,

			1.0f , -1.0f, -1.0f,
			-1.0f , 1.0f, -1.0f,
			1.0f , 1.0f, -1.0f,

			1.0f , -1.0f, 1.0f,
			-1.0f , -1.0f, 1.0f,
			-1.0f , -1.0f, -1.0f,

			-1.0f , 1.0f, -1.0f,
			-1.0f , 1.0f, 1.0f,
			1.0f , 1.0f, 1.0f,

			1.0f , 1.0f, -1.0f,
			1.0f , 1.0f, 1.0f,
			1.0f , -1.0f, 1.0f,

			1.0f , 1.0f, 1.0f,
			-1.0f , 1.0f, 1.0f,
			-1.0f , -1.0f, 1.0f,

			-1.0f , -1.0f, 1.0f,
			-1.0f , 1.0f, 1.0f,
			-1.0f , 1.0f, -1.0f,

			1.0f , -1.0f, -1.0f,
			-1.0f , -1.0f, -1.0f,
			-1.0f , 1.0f, -1.0f

		};
		float uv[72] = {
			1.0f , 0.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			1.0f , 0.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			1.0f , 0.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			1.0f , 0.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			0.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f,
			1.0f , 0.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f,
			0.0f , 0.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			1.0f , 0.0f,
			1.0f , 1.0f,
			0.0f , 1.0f
		};

		size_t sizeuv;
		size_t sizevert;
		size_t nb;

		//std::vector<float> uvs;

		std::vector<glm::vec3> points;
		std::vector<glm::vec2> uvs;

				Chunk(void);
		float	*getVertices(void);
		size_t	getSizeVertices(void);

		float	*getUVs(void);
		size_t	getSizeUVs(void);

		size_t	getTriangle(void);
};

#endif
